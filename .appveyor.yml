version: "{build}"

environment:
  global:
    VERBOSE: 1 # Get test logs in output
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ASAN: 'yes'
      LSAN_OPTIONS: verbosity=1:log_threads=1
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    - APPVEYOR_BUILD_WORKER_IMAGE: macos
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSYSTEM: MSYS
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSYSTEM: MINGW64
      # Define _POSIX to get a full set of POSIX signal names from signal.h on mingw
      CPPFLAGS: -D_POSIX
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSYSTEM: MINGW32
      # Define _POSIX to get a full set of POSIX signal names from signal.h on mingw
      CPPFLAGS: -D_POSIX

for:
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
  init:
    - sudo apt-get -y install help2man gcc-multilib linux-libc-dev:i386
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: macos
  init:
    - brew install help2man
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  init:
    - cmd: git config --global core.autocrlf input

install:
  - git submodule update --init --recursive

build_script:
  - cmd: C:\msys64\usr\bin\bash.exe -lc "cd c:/projects/bee && ./bootstrap && ./configure --enable-silent-rules %CONFIGURE_FLAGS% && make && make check"
  - sh: ./bootstrap
  - sh: if [[ "$ASAN" == "yes" ]]; then ./configure --enable-silent-rules CFLAGS="-g3 -fsanitize=address -fsanitize=undefined" LDFLAGS="-fsanitize=address -fsanitize=undefined" LOG_ENV="LD_PRELOAD=/usr/lib/gcc/x86_64-linux-gnu/7/libasan.so"; else ./configure --enable-silent-rules; fi
  - sh: make check
  - sh: if [[ "$APPVEYOR_BUILD_WORKER_IMAGE" == "Ubuntu" ]]; then make distcheck; fi
